---
# STEP 1: Check if AstroNvim is already fully installed. This is the main idempotency check.
- name: "Check if AstroNvim is already installed for user {{ user.name }}"
  ansible.builtin.stat:
    path: "/home/{{ user.name }}/.local/share/nvim/lazy/lazy.nvim"
  register: astronvim_install_stat
  become_user: "{{ user.name }}"

# STEP 2: If AstroNvim isn't installed, check which (if any) old config directories exist.
- name: "Check for existing directories to backup for user {{ user.name }}"
  ansible.builtin.stat:
    path: "/home/{{ user.name }}/{{ item }}"
  loop:
    - ".config/nvim"
    - ".local/share/nvim"
    - ".local/state/nvim"
    - ".cache/nvim"
  register: existing_paths
  when: not astronvim_install_stat.stat.exists
  become_user: "{{ user.name }}"

# STEP 3: If AstroNvim isn't installed, run the main setup block.
- name: "Set up AstroNvim for user {{ user.name }}"
  become_user: "{{ user.name }}"
  when: not astronvim_install_stat.stat.exists
  block:
    - name: "Backup existing Neovim directories"
      ansible.builtin.command:
        cmd: "mv {{ item.stat.path }} {{ item.stat.path }}.bak"
      loop: "{{ existing_paths.results }}"
      when: item.stat.exists

    - name: "Clone AstroNvim template"
      ansible.builtin.git:
        repo: "https://github.com/AstroNvim/template"
        dest: "/home/{{ user.name }}/.config/nvim"
        depth: 1
    
    - name: "Remove .git directory from AstroNvim clone"
      ansible.builtin.file:
        path: "/home/{{ user.name }}/.config/nvim/.git"
        state: absent